import 'package:flutter/material.dart';
import 'package:wanted/api/mock_wanted_service.dart';
import 'package:wanted/models/model.dart';

/// **Provider pour g√©rer les m√©moriaux dynamiquement**
class MemorialProvider extends ChangeNotifier {
  final MockWantedService _mockWantedService = MockWantedService();
  List<MemorialModel> _memorials = [];

  /// ‚úÖ R√©cup√®re la liste des m√©moriaux
  List<MemorialModel> get memorials => _memorials;

  MemorialProvider() {
    fetchMemorials(); // Charge les m√©moriaux au d√©marrage
  }

  /// **üîÑ R√©cup√®re les m√©moriaux depuis l'API**
  Future<void> fetchMemorials() async {
    try {
      WantedData data = await _mockWantedService.getWantedData();
      _memorials = data.memorialData; // ‚úÖ Correction de type
      notifyListeners();
    } catch (e) {
      debugPrint("Erreur lors du chargement des m√©moriaux: $e");
    }
  }

  /// **‚ûï Ajoute un nouveau m√©morial**
  void addMemorial(MemorialModel newMemorial) {
    _memorials.insert(0, newMemorial);
    notifyListeners();
  }

  /// **‚ùå Supprime un m√©morial**
  void removeMemorial(MemorialModel memorial) {
    _memorials.remove(memorial);
    notifyListeners();
  }
}
