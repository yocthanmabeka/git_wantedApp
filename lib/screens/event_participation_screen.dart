import 'package:flutter/material.dart';
import 'package:wanted/component/payment_page.dart';
import 'package:wanted/models/event_model.dart';
import 'package:wanted/models/user_model.dart';

class EventGriefScreen extends StatelessWidget {
  final EventModel event;
  final UserModel creator;

  const EventGriefScreen({
    super.key,
    required this.event,
    required this.creator,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      appBar: AppBar(
        title: const Text("Participation √† l'√©v√©nement"),
        backgroundColor: Colors.black,
        elevation: 0,
        actions: [
          IconButton(
            icon: const Icon(Icons.share, color: Colors.white),
            onPressed: () {
              // TODO: Impl√©menter le partage de l'√©v√©nement
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            _buildEventHeader(), // ‚úÖ Informations sur le d√©funt
            _buildLiveStreamingSection(context), // ‚úÖ Lives et M√©dias
            _buildCategorySection(), // ‚úÖ Cat√©gories du d√©funt
            _buildCeremonyDetails(), // ‚úÖ D√©tails de la c√©r√©monie
            _buildCustomizationAndRituals(), // ‚úÖ Personnalisation et rituels
            _buildParticipantsAndAccess(), // ‚úÖ Participants et Acc√®s
            _buildCommemorationCreation(),
            _buildMemorialTribute(), // ‚úÖ Hommage
            _buildCondolenceBook(),
            _buildContribution(context), // ‚úÖ Contribution
          ],
        ),
      ),
    );
  }

  /// ‚úÖ **1Ô∏è‚É£ Informations sur le d√©funt**
  Widget _buildEventHeader() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          CircleAvatar(
            radius: 60,
            backgroundImage: NetworkImage(event.media.isNotEmpty ? event.media.first["url"]! : ""),
            backgroundColor: Colors.white24,
          ),
          const SizedBox(height: 12),
          Text(
            event.title,
            style: const TextStyle(fontSize: 24, fontWeight: FontWeight.bold, color: Colors.white),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 8),
          Text(
            "${event.date} - ${event.location}",
            style: const TextStyle(fontSize: 16, color: Colors.grey),
          ),
          const SizedBox(height: 8),
          Text(
            event.description,
            style: const TextStyle(fontSize: 14, color: Colors.white70),
            textAlign: TextAlign.center,
          ),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **2Ô∏è‚É£ Lives et M√©dias**
  Widget _buildLiveStreamingSection(BuildContext context) {
    return event.media.isNotEmpty
        ? Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16),
            child: ClipRRect(
              borderRadius: BorderRadius.circular(10),
              child: Stack(
                children: [
                  Image.network(event.media.first["url"]!, fit: BoxFit.cover, width: double.infinity, height: 220),
                  Positioned(
                    bottom: 10,
                    right: 10,
                    child: ElevatedButton.icon(
                      onPressed: () {
                        // TODO: Lancer la diffusion en direct ou vid√©o
                      },
                      style: ElevatedButton.styleFrom(backgroundColor: Colors.redAccent),
                      icon: const Icon(Icons.play_arrow, color: Colors.white),
                      label: const Text("Regarder"),
                    ),
                  ),
                ],
              ),
            ),
          )
        : const SizedBox.shrink();
  }

  /// ‚úÖ **3Ô∏è‚É£ Cat√©gories du d√©funt**
  Widget _buildCategorySection() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Cat√©gories du d√©funt",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          const SizedBox(height: 8),
          Wrap(
            spacing: 8,
            children: event.categories.map((category) {
              return Chip(label: Text(category, style: const TextStyle(color: Colors.white)));
            }).toList(),
          ),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **4Ô∏è‚É£ D√©tails de la c√©r√©monie**
  Widget _buildCeremonyDetails() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("D√©tails de la c√©r√©monie",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          Text("Type : ${event.ceremonyType}", style: const TextStyle(color: Colors.white70)),
          Text("Date : ${event.date}", style: const TextStyle(color: Colors.white70)),
          Text("Lieu : ${event.location}", style: const TextStyle(color: Colors.white70)),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **5Ô∏è‚É£ Personnalisation et Rituels**
  Widget _buildCustomizationAndRituals() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Personnalisation et Rituels",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          Text("Th√®me : ${event.theme}", style: const TextStyle(color: Colors.white70)),
          Text("Musique : ${event.music}", style: const TextStyle(color: Colors.white70)),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **6Ô∏è‚É£ Participants et Acc√®s**
  Widget _buildParticipantsAndAccess() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Participants et Acc√®s",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          Text("Acc√®s : ${event.accessType}", style: const TextStyle(color: Colors.white70)),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **7Ô∏è‚É£ Hommage**
  Widget _buildMemorialTribute() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Hommage",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          const SizedBox(height: 8),
          Wrap(
            spacing: 12,
            runSpacing: 12,
            alignment: WrapAlignment.center,
            children: [
              _buildSymbolItem("üïØ Bougie", "Allumez une lumi√®re en sa m√©moire"),
              _buildSymbolItem("üìú Citation", "Un dernier hommage √©crit"),
              _buildSymbolItem("üèµ Fleurs", "D√©poser une couronne virtuelle"),
              _buildSymbolItem("üìñ Livre d'or", "√âcrire un souvenir"),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildSymbolItem(String icon, String label) {
    return Column(
      children: [
        Text(icon, style: const TextStyle(fontSize: 30)),
        const SizedBox(height: 5),
        Text(label, style: const TextStyle(fontSize: 12, color: Colors.white70)),
      ],
    );
  }

  Widget _buildCommemorationCreation() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Cr√©er une comm√©moration",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          ElevatedButton.icon(
            onPressed: () {
              // TODO: Naviguer vers la cr√©ation du m√©morial
            },
            icon: const Icon(Icons.add, color: Colors.white),
            label: const Text("Cr√©er une comm√©moration"),
            style: ElevatedButton.styleFrom(backgroundColor: Colors.blue),
          ),
        ],
      ),
    );
  }

  /// ‚úÖ **Livre d'or pour messages de condol√©ances**
  Widget _buildCondolenceBook() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text(
            "Mettre des hommages",
            style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white),
          ),
          const SizedBox(height: 8),
          Container(
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: Colors.white12,
              borderRadius: BorderRadius.circular(10),
            ),
            child: Column(
              children: [
                TextField(
                  style: const TextStyle(color: Colors.white),
                  decoration: const InputDecoration(
                    hintText: "√âcrivez un message en hommage...",
                    hintStyle: TextStyle(color: Colors.white54),
                    border: InputBorder.none,
                  ),
                  maxLines: 3,
                ),
                const SizedBox(height: 8),
                ElevatedButton(
                  onPressed: () {
                    // TODO: Ajouter le message au livre d'or
                  },
                  style: ElevatedButton.styleFrom(backgroundColor: Colors.blueAccent),
                  child: const Text("Envoyer"),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  /// ‚úÖ ** Contribution**
  Widget _buildContribution(BuildContext context) {
  return Padding(
    padding: const EdgeInsets.all(16),
    child: Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        ElevatedButton(
          onPressed: () {
            // ‚úÖ Correction : context est maintenant disponible
            Navigator.push(context, MaterialPageRoute(builder: (context) => PaymentPage()));
          },
          style: ElevatedButton.styleFrom(backgroundColor: Colors.greenAccent),
          child: const Text("Contribuer"),
        ),
      ],
    ),
  );
}

}

class EventCommemorationScreen extends StatelessWidget {
  final EventModel event;
  final UserModel creator;

  const EventCommemorationScreen({
    super.key,
    required this.event,
    required this.creator,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      appBar: AppBar(
        title: const Text("Participation √† l'√©v√©nement"),
        backgroundColor: Colors.black,
        elevation: 0,
        actions: [
          IconButton(
            icon: const Icon(Icons.share, color: Colors.white),
            onPressed: () {
              // TODO: Impl√©menter le partage de l'√©v√©nement
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            _buildEventHeader(), // ‚úÖ Informations sur le d√©funt
            _buildCommemoFrequency(), // ‚úÖ Fr√©quence et Date de la Comm√©moration
            _buildLiveStreamingSection(context), // ‚úÖ Lives et M√©dias
            _buildCategorySection(), // ‚úÖ Cat√©gories du d√©funt
            _buildCeremonyDetails(), // ‚úÖ D√©tails de la c√©r√©monie
            _buildCommemoLocation(), // ‚úÖ Lieu et Mode de Comm√©moration
            _buildCustomizationAndActivities(), // ‚úÖ Personnalisation et Activit√©s
            _buildMemorialCreation(), // ‚úÖ Exposition ou Cr√©ation du M√©morial
            _buildMemorialTribute(), // ‚úÖ Hommage
            _buildCondolenceBook(),
            _buildContribution(context), // ‚úÖ Contribution
          ],
        ),
      ),
    );
  }
  Widget _buildSymbolItem(String icon, String label) {
    return Column(
      children: [
        Text(icon, style: const TextStyle(fontSize: 30)),
        const SizedBox(height: 5),
        Text(label, style: const TextStyle(fontSize: 12, color: Colors.white70)),
      ],
    );
  }

  /// ‚úÖ **1Ô∏è‚É£ Informations sur le d√©funt**
  Widget _buildEventHeader() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          CircleAvatar(
            radius: 60,
            backgroundImage: NetworkImage(event.media.isNotEmpty ? event.media.first["url"]! : ""),
            backgroundColor: Colors.white24,
          ),
          const SizedBox(height: 12),
          Text(
            event.title,
            style: const TextStyle(fontSize: 24, fontWeight: FontWeight.bold, color: Colors.white),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 8),
          Text(
            "${event.date} - ${event.location}",
            style: const TextStyle(fontSize: 16, color: Colors.grey),
          ),
          const SizedBox(height: 8),
          Text(
            event.description,
            style: const TextStyle(fontSize: 14, color: Colors.white70),
            textAlign: TextAlign.center,
          ),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **2Ô∏è‚É£ Fr√©quence et Date de la Comm√©moration**
  Widget _buildCommemoFrequency() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Fr√©quence et Date de la Comm√©moration",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          Text("Date : ${event.date}", style: const TextStyle(color: Colors.white70)),
          Text("Fr√©quence : ${event.recurrence}", style: const TextStyle(color: Colors.white70)),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **3Ô∏è‚É£ Lives et M√©dias**
  Widget _buildLiveStreamingSection(BuildContext context) {
    return event.media.isNotEmpty
        ? Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16),
            child: ClipRRect(
              borderRadius: BorderRadius.circular(10),
              child: Stack(
                children: [
                  Image.network(event.media.first["url"]!, fit: BoxFit.cover, width: double.infinity, height: 220),
                  Positioned(
                    bottom: 10,
                    right: 10,
                    child: ElevatedButton.icon(
                      onPressed: () {
                        // TODO: Lancer la diffusion en direct ou vid√©o
                      },
                      style: ElevatedButton.styleFrom(backgroundColor: Colors.redAccent),
                      icon: const Icon(Icons.play_arrow, color: Colors.white),
                      label: const Text("Regarder"),
                    ),
                  ),
                ],
              ),
            ),
          )
        : const SizedBox.shrink();
  }

  /// ‚úÖ **4Ô∏è‚É£ Cat√©gories du d√©funt**
  Widget _buildCategorySection() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Cat√©gories du d√©funt",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          Wrap(
            spacing: 8,
            children: event.categories.map((category) {
              return Chip(label: Text(category, style: const TextStyle(color: Colors.white)));
            }).toList(),
          ),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **5Ô∏è‚É£ D√©tails de la c√©r√©monie**
  Widget _buildCeremonyDetails() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("D√©tails de la c√©r√©monie",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          Text("Type : ${event.ceremonyType}", style: const TextStyle(color: Colors.white70)),
          Text("Date : ${event.date}", style: const TextStyle(color: Colors.white70)),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **6Ô∏è‚É£ Lieu et Mode de Comm√©moration**
  Widget _buildCommemoLocation() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Lieu et Mode de Comm√©moration",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          Text("Lieu : ${event.location}", style: const TextStyle(color: Colors.white70)),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **7Ô∏è‚É£ Personnalisation et Activit√©s**
  Widget _buildCustomizationAndActivities() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Personnalisation et Activit√©s",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          Text("Th√®me : ${event.theme}", style: const TextStyle(color: Colors.white70)),
          const Divider(color: Colors.white24, thickness: 1, height: 25),
        ],
      ),
    );
  }

  /// ‚úÖ **8Ô∏è‚É£ Exposition ou Cr√©ation du M√©morial**
  Widget _buildMemorialCreation() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Exposition ou Cr√©ation du M√©morial",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          ElevatedButton.icon(
            onPressed: () {
              // TODO: Naviguer vers la cr√©ation du m√©morial
            },
            icon: const Icon(Icons.add, color: Colors.white),
            label: const Text("Cr√©er un M√©morial"),
            style: ElevatedButton.styleFrom(backgroundColor: Colors.blue),
          ),
        ],
      ),
    );
  }

  Widget _buildMemorialTribute() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text("Hommage",
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white)),
          const SizedBox(height: 8),
          Wrap(
            spacing: 12,
            runSpacing: 12,
            alignment: WrapAlignment.center,
            children: [
              _buildSymbolItem("üïØ Bougie", "Allumez une lumi√®re en sa m√©moire"),
              _buildSymbolItem("üìú Citation", "Un dernier hommage √©crit"),
              _buildSymbolItem("üèµ Fleurs", "D√©poser une couronne virtuelle"),
              _buildSymbolItem("üìñ Livre d'or", "√âcrire un souvenir"),
            ],
          ),
        ],
      ),
    );
  }
  /// ‚úÖ **Livre d'or pour messages de condol√©ances**
  Widget _buildCondolenceBook() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text(
            "Mettre des hommages",
            style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white),
          ),
          const SizedBox(height: 8),
          Container(
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: Colors.white12,
              borderRadius: BorderRadius.circular(10),
            ),
            child: Column(
              children: [
                TextField(
                  style: const TextStyle(color: Colors.white),
                  decoration: const InputDecoration(
                    hintText: "√âcrivez un message en hommage...",
                    hintStyle: TextStyle(color: Colors.white54),
                    border: InputBorder.none,
                  ),
                  maxLines: 3,
                ),
                const SizedBox(height: 8),
                ElevatedButton(
                  onPressed: () {
                    // TODO: Ajouter le message au livre d'or
                  },
                  style: ElevatedButton.styleFrom(backgroundColor: Colors.blueAccent),
                  child: const Text("Envoyer"),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  /// ‚úÖ ** Contribution**
  Widget _buildContribution(BuildContext context) {
  return Padding(
    padding: const EdgeInsets.all(16),
    child: Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        ElevatedButton(
          onPressed: () {
            // ‚úÖ Correction : context est maintenant disponible
            Navigator.push(context, MaterialPageRoute(builder: (context) => PaymentPage()));
          },
          style: ElevatedButton.styleFrom(backgroundColor: Colors.greenAccent),
          child: const Text("Contribuer"),
        ),
      ],
    ),
  );
}
}


// import 'package:flutter/material.dart';
// import 'package:wanted/models/event_model.dart';
// import 'package:wanted/models/user_model.dart';

// class EventParticipationScreen extends StatelessWidget {
//   final EventModel event;
//   final UserModel creator;

//   const EventParticipationScreen({
//     super.key,
//     required this.event,
//     required this.creator,
//   });

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       backgroundColor: Colors.black,
//       appBar: AppBar(
//         title: const Text("Participation √† l'√©v√©nement"),
//         backgroundColor: Colors.black,
//         elevation: 0,
//         actions: [
//           IconButton(
//             icon: const Icon(Icons.share, color: Colors.white),
//             onPressed: () {
//               // TODO: Impl√©menter le partage de l'√©v√©nement
//             },
//           ),
//         ],
//       ),
//       body: SingleChildScrollView(
//         child: Column(
//           crossAxisAlignment: CrossAxisAlignment.center,
//           children: [
//             _buildEventHeader(),
//             _buildLiveStreamingSection(context),
//             _buildParticipationOptions(context),
//             _buildMemorialTribute(),
//             _buildCondolenceBook(),
//           ],
//         ),
//       ),
//     );
//   }

//   /// ‚úÖ **Affichage des informations principales du d√©funt et de l'√©v√©nement**
//   Widget _buildEventHeader() {
//     return Padding(
//       padding: const EdgeInsets.all(16),
//       child: Column(
//         crossAxisAlignment: CrossAxisAlignment.center,
//         children: [
//           CircleAvatar(
//             radius: 60,
//             backgroundImage: NetworkImage(event.media.isNotEmpty ? event.media.first["url"]! : ""),
//             backgroundColor: Colors.white24,
//           ),
//           const SizedBox(height: 12),
//           Text(
//             event.title,
//             style: const TextStyle(fontSize: 24, fontWeight: FontWeight.bold, color: Colors.white),
//             textAlign: TextAlign.center,
//           ),
//           const SizedBox(height: 8),
//           Text(
//             "${event.date} - ${event.location}",
//             style: const TextStyle(fontSize: 16, color: Colors.grey),
//           ),
//           const SizedBox(height: 8),
//           Text(
//             event.description,
//             style: const TextStyle(fontSize: 14, color: Colors.white70),
//             textAlign: TextAlign.center,
//           ),
//           const Divider(color: Colors.white24, thickness: 1, height: 25),
//         ],
//       ),
//     );
//   }

//   /// ‚úÖ **Section pour la diffusion en direct ou la rediffusion**
//   Widget _buildLiveStreamingSection(BuildContext context) {
//     return event.media.isNotEmpty
//         ? Padding(
//             padding: const EdgeInsets.symmetric(horizontal: 16),
//             child: ClipRRect(
//               borderRadius: BorderRadius.circular(10),
//               child: Stack(
//                 children: [
//                   Image.network(event.media.first["url"]!, fit: BoxFit.cover, width: double.infinity, height: 220),
//                   Positioned(
//                     bottom: 10,
//                     right: 10,
//                     child: ElevatedButton.icon(
//                       onPressed: () {
//                         // TODO: Lancer la diffusion en direct ou vid√©o
//                       },
//                       style: ElevatedButton.styleFrom(backgroundColor: Colors.redAccent),
//                       icon: const Icon(Icons.play_arrow, color: Colors.white),
//                       label: const Text("Regarder"),
//                     ),
//                   ),
//                 ],
//               ),
//             ),
//           )
//         : const SizedBox.shrink();
//   }

//   /// ‚úÖ **Options de participation √† l'√©v√©nement**
//   Widget _buildParticipationOptions(BuildContext context) {
//     return Padding(
//       padding: const EdgeInsets.all(16),
//       child: Column(
//         children: [
//           ElevatedButton.icon(
//             onPressed: () {
//               // TODO: Impl√©menter l'allumage de bougie virtuelle
//             },
//             style: ElevatedButton.styleFrom(backgroundColor: Colors.orangeAccent),
//             icon: const Icon(Icons.local_fire_department, color: Colors.white),
//             label: const Text("Allumer une bougie virtuelle"),
//           ),
//           const SizedBox(height: 8),
//           ElevatedButton.icon(
//             onPressed: () {
//               // TODO: Impl√©menter la donation
//             },
//             style: ElevatedButton.styleFrom(backgroundColor: Colors.greenAccent),
//             icon: const Icon(Icons.volunteer_activism, color: Colors.white),
//             label: const Text("Faire un don"),
//           ),
//         ],
//       ),
//     );
//   }

//   /// ‚úÖ **Hommage m√©moriel avec objets symboliques**
//   Widget _buildMemorialTribute() {
//     return Padding(
//       padding: const EdgeInsets.all(16),
//       child: Column(
//         crossAxisAlignment: CrossAxisAlignment.center,
//         children: [
//           const Text(
//             "Hommage M√©moriel",
//             style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white),
//           ),
//           const SizedBox(height: 8),
//           Wrap(
//             spacing: 12,
//             runSpacing: 12,
//             alignment: WrapAlignment.center,
//             children: [
//               _buildSymbolItem("üïØ Bougie", "Allumez une lumi√®re en sa m√©moire"),
//               _buildSymbolItem("üìú Citation", "Un dernier hommage √©crit"),
//               _buildSymbolItem("üèµ Fleurs", "D√©poser une couronne virtuelle"),
//               _buildSymbolItem("üìñ Livre d'or", "√âcrire un souvenir"),
//             ],
//           ),
//         ],
//       ),
//     );
//   }

//   Widget _buildSymbolItem(String icon, String label) {
//     return Column(
//       children: [
//         Text(icon, style: const TextStyle(fontSize: 30)),
//         const SizedBox(height: 5),
//         Text(label, style: const TextStyle(fontSize: 12, color: Colors.white70)),
//       ],
//     );
//   }

//   /// ‚úÖ **Livre d'or pour messages de condol√©ances**
//   Widget _buildCondolenceBook() {
//     return Padding(
//       padding: const EdgeInsets.all(16),
//       child: Column(
//         crossAxisAlignment: CrossAxisAlignment.start,
//         children: [
//           const Text(
//             "Livre d'or",
//             style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white),
//           ),
//           const SizedBox(height: 8),
//           Container(
//             padding: const EdgeInsets.all(12),
//             decoration: BoxDecoration(
//               color: Colors.white12,
//               borderRadius: BorderRadius.circular(10),
//             ),
//             child: Column(
//               children: [
//                 TextField(
//                   style: const TextStyle(color: Colors.white),
//                   decoration: const InputDecoration(
//                     hintText: "√âcrivez un message en hommage...",
//                     hintStyle: TextStyle(color: Colors.white54),
//                     border: InputBorder.none,
//                   ),
//                   maxLines: 3,
//                 ),
//                 const SizedBox(height: 8),
//                 ElevatedButton(
//                   onPressed: () {
//                     // TODO: Ajouter le message au livre d'or
//                   },
//                   style: ElevatedButton.styleFrom(backgroundColor: Colors.blueAccent),
//                   child: const Text("Envoyer"),
//                 ),
//               ],
//             ),
//           ),
//         ],
//       ),
//     );
//   }
// }
